// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testetobr.Data;

namespace testetobr.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210128014045_ReparoContagemCedulas")]
    partial class ReparoContagemCedulas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TradebookApi.Models.Moeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Moeda");
                });

            modelBuilder.Entity("TradebookApi.Models.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("TradebookApi.Models.Operacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTroco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Operacao");
                });

            modelBuilder.Entity("TradebookApi.Models.SaidaTroco", b =>
                {
                    b.Property<int>("IdSaidaTroco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IdOperacao")
                        .HasColumnType("int");

                    b.Property<int>("MoedaDe10")
                        .HasColumnType("int");

                    b.Property<int>("MoedaDe100")
                        .HasColumnType("int");

                    b.Property<int>("MoedaDe25")
                        .HasColumnType("int");

                    b.Property<int>("MoedaDe5")
                        .HasColumnType("int");

                    b.Property<int>("MoedaDe50")
                        .HasColumnType("int");

                    b.Property<int>("NotaDe10")
                        .HasColumnType("int");

                    b.Property<int>("NotaDe100")
                        .HasColumnType("int");

                    b.Property<int>("NotaDe2")
                        .HasColumnType("int");

                    b.Property<int>("NotaDe20")
                        .HasColumnType("int");

                    b.Property<int>("NotaDe200")
                        .HasColumnType("int");

                    b.Property<int>("NotaDe5")
                        .HasColumnType("int");

                    b.Property<int>("NotaDe50")
                        .HasColumnType("int");

                    b.HasKey("IdSaidaTroco");

                    b.ToTable("SaidaTroco");
                });
#pragma warning restore 612, 618
        }
    }
}
